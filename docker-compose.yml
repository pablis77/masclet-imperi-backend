x-logging: &default-logging
  driver: "json-file"
  options:
    max-size: "${LOG_MAX_SIZE:-10m}"
    max-file: "${LOG_MAX_FILE:-3}"

services:
  db:
    image: postgres:17
    container_name: masclet_imperi_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8"
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_SHARED_BUFFERS: ${POSTGRES_SHARED_BUFFERS}
      POSTGRES_WORK_MEM: ${POSTGRES_WORK_MEM}
      POSTGRES_MAINTENANCE_WORK_MEM: ${POSTGRES_MAINTENANCE_WORK_MEM}
      POSTGRES_EFFECTIVE_CACHE_SIZE: ${POSTGRES_EFFECTIVE_CACHE_SIZE}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - type: volume
        source: postgres_data
        target: /var/lib/postgresql/data/pgdata
      - type: bind
        source: ./docker/postgres/init
        target: /docker-entrypoint-initdb.d
        read_only: true
      - type: bind
        source: ./docker/postgres/logs
        target: /var/log/postgresql
      - type: bind
        source: ./docker/postgres/backups
        target: /backups
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    deploy:
      resources:
        limits:
          cpus: '${POSTGRES_CPU_LIMIT}'
          memory: ${POSTGRES_MEM_LIMIT}
        reservations:
          memory: ${POSTGRES_MEM_RESERVATION}
    logging:
      driver: "json-file"
      options:
        max-size: "${LOG_MAX_SIZE}"
        max-file: "${LOG_MAX_FILE}"
    networks:
      - masclet_network

networks:
  masclet_network:
    driver: bridge
    name: masclet_network

volumes:
  postgres_data:
    name: masclet_imperi_data